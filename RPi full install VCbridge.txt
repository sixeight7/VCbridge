ls*****************************************************************************
VCbridge full installation instructions
*****************************************************************************

Follow these instructions to install VCbridge unto a Raspberry Pi

*****************************************************************************
STEP 1: Install Jessie Lite unto the SD card
*****************************************************************************

Go to this page and download Raspbian Jessie Lite:
I have not tested this configuration on the newer Debian version yet (called "Stretch")

http://domoticx.com/raspberry-pi-sd-image-raspbian-linux-os/
(https://www.raspberrypi.org/downloads/raspbian/ only shows the new Stretch version)

Then follow the instructions here to write to SD:

https://www.raspberrypi.org/documentation/installation/installing-images/README.md

Connect the pi to a display via HDMI and startup.

Default logon:
user: pi
pass: raspberry

Enable the ssh service:
# sudo service ssh start
#sudo systemctl enable ssh

Upgrade Jessie Lite to the latest version:
$ sudo apt-get update
$ sudo apt-get upgrade

*****************************************************************************
STEP 2: Install VCbridge
*****************************************************************************

1) Change the UART clock to communicate at 32150 bit/s

$ sudo nano /boot/config.txt

Add these lines to the bottom of config.txt file:
=============================================================================
init_uart_clock=2441406
init_uart_baud=38400
dtparam=uart0_clkrate=3000000
enable_uart=1
=============================================================================

2) Disable the pi's shell from accesing the UART

$ sudo nano /boot/cmdline.txt
Removed console=serial0,115200

Entire line reads: dwc_otg.lpm_enable=0 bcm2708.uart_clock=3000000 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait

Stop and disable the tty on UART service:

$ sudo systemctl stop serial-getty@ttyAMA0.service
$ sudo systemctl disable serial-getty@ttyAMA0.service

$ sudo systemctl stop serial-getty@ttyS0.service
$ sudo systemctl disable serial-getty@ttyS0.service

Install needed packages:
$ sudo apt-get install libasound2
$ sudo apt-get install git 

Install VCbridge
$ git clone https://github.com/sixeight7/VCbridge.git
$ cd VCbridge
$ make
$ sudo make install

Download and copy llctl.tgz from https://www.raspberrypi.org/forums/viewtopic.php?t=72070
We use this tool to control the LEDs of the LAN connector
$ sudo apt-get install libusb-dev
$ git clone https://github.com/nateober/RaspberryPI.git
$ cd RaspberryPI/llctl/ 
$ sudo make
$ sudo cp llctl /usr/bin/

*****************************************************************************
STEP 3: Create a startup script for midi:
*****************************************************************************

$ sudo nano /etc/init.d/midi_setup

Add the lines:
=============================================================================
#!/bin/bash

# Start VCbridge with default settings
/usr/local/bin/VCbridge &
_setup
# Make the midi connections
/usr/local/bin/connect_midi

# Check if the bridge really started - otherwise retry by restarting this script
sleep 1
if [[ ! $(pgrep -f VCbridge) ]]; then
  /etc/init.d/midi_setup
else
  # Switch link LED on
  llctl l1
fi
exit 0
=============================================================================

Make it executable:
$ sudo chmod +x /etc/init.d/midi_setup

Add it to the start up process±
$ sudo update-rc.d midi_setup defaults

Build a new script for connecting the pi:
$ sudo nano /usr/local/bin/connect_midi

Add the lines:
=============================================================================
#! /bin/sh
#Remote current connections
aconnect -x

#connect 1st device to VCbridge port 0
aconnect 128:0 20:0
aconnect 20:0 128:0

#connect 2nd device to VCbridge port 1
aconnect 128:1 24:0
aconnect 24:0 128:1

#connect 3rd device to VCbridge port 2
aconnect 128:2 28:0
aconnect 28:0 128:2

#connect 4th device to VCbridge port 3
aconnect 128:3 32:0
aconnect 32:0 128:3
=============================================================================

Make it executable:
$ sudo chmod 755 /usr/local/bin/connect_midi


*****************************************************************************
STEP 4: Make the midi connections reconnect when plugging in and out the usb:
*****************************************************************************

$ sudo nano /etc/udev/rules.d/68-midi_connect.rules

And add the lines:
=============================================================================
#Run script on connection of all USB devices
ACTION=="add", SUBSYSTEM=="usb", DRIVERS=="usb", RUN+="/usr/local/bin/connect_midi"
=============================================================================

This script will connect with pretty much any music related interface.
Source: http://alsa.opensrc.org/Udev

Change owner and reload udevadm:
$ sudo chown root:root /etc/udev/rules.d/68-midi_connect.rules
$ sudo udevadm control --reload

*****************************************************************************
STEP 5: Make the filesystem readonly to avoid corruption
*****************************************************************************
Source: http://www.vguitarforums.com/smf/index.php?topic=12067.msg88038#msg88038
Thanks Gumtown!

$ sudo nano /etc/fstab

change the 4th parameter to 'ro' as below:

proc               /proc      proc      defaults    0       0
/dev/mmcblk0p1     /boot      vfat      ro          0       2
/dev/mmcblk0p2     /          ext4      ro          0       1

We need a scipt to type quit to make the pi R/W

Make script:
$ sudo nano /usr/local/bin/quit

It contains the following lines:
=============================================================================
#! /bin/sh

sudo mount / -o remount,rw

echo
echo "Disk sytem is now R/W -  do not power off - USE 'sudo shutdown -h now'"
=============================================================================

So every time you need to edit something on the RPi, you first type:

$ quit

Now you do need to shutdown or reboot the system properly after the edit:

$ sudo shutdown now

$ sudo reboot now

*****************************************************************************
STEP 6: Created clone on second microSD card
*****************************************************************************

Connect an sd card in a card reader to the Raspberry Pi

$ git clone https://github.com/billw2/rpi-clone.git
sud

$ sudo cp rpi-clone/rpi-clone /usr/local/sbin

Check if sda exists:

$ sudo fdisk -l

Reboot now to make sure the disk is read only - otherwise it will become very slow at bootup!

Make the clone:

$ sudo rpi-clone sda -f

Answer yes to all questions. You can skip entering a name for a label.